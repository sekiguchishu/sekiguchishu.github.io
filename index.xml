<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ホーム on 関口 周のサイト</title>
    <link>http://sekiguchishu.github.io/</link>
    <description>Recent content in ホーム on 関口 周のサイト</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    
	<atom:link href="http://sekiguchishu.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JDKのインストール</title>
      <link>http://sekiguchishu.github.io/docs/java/java_env/jdk_install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://sekiguchishu.github.io/docs/java/java_env/jdk_install/</guid>
      <description>JDKのインストール JDKとは 　JDKはJava Development Kitの略です。JDKには，Javaで書かれたソースコードをコンパイルするためのコンパイラや，そのコンパイル結果（バイトコードとよぶ）を実行するためのバーチャルマシンなどが含まれています。コンパイルの意味が分からない方は，プログラミング入門をご覧ください。
バーチャルマシンとは簡単にいうと，コンピュータの中に（CPUの上に）仮想的に作られたコンピュータのことです。C言語などのような言語で書かれたソースコードをコンパイルして出来上がったファイルに含まれる機械語は，特定の種類のCPU上でしか解釈・実行できません。ところがJava言語で書かれたソースコードをコンパイルして出来上がったファイルに含まれるバイトコードは，バーチャルマシンが解釈・実行できます。つまり，CPUの種類が違っても，その上に作られたバーチャルマシンさえ共通化しておけば，どんなプラットフォーム上でも動く（クロスプラットフォームな）実行ファイルを作れるというわけです。
JDKには複数の種類（OpenJDKなど）がありますが，ここではOracle社が提供している，いわば公式のJDKをインストールします。
ダウンロード 　まずはインストーラをダウンロードします。「jdk 13」で検索してください。執筆時点では最新バージョンは13ですが，適宜読み替えてください。「Java SE Development Kit 13 - Downloads - Oracle」というような名前のページを開きます。  ページ下部にこのような表示があると思いますので，「Accept License Agreement」のラジオボタンをクリックしたうえで，Windowsの方は「.exe」のものを，Macの方は「.dmg」のものをダウンロードしてください。
インストール 　ダウンロードしたファイルを起動（Windowsの場合は.exeファイルをダブルクリック，Macの場合は.dmgファイルをダブルクリックしてマウントし，その中にある.pkgファイルをダブルクリック）し，「次」などを押してインストールを完了させてください。インストール先はデフォルトのままがよいでしょう。以下にWindows 10の場合に想定される表示を載せておきます。      ・IDEのインストールへ進む</description>
    </item>
    
    <item>
      <title>IDEのインストール</title>
      <link>http://sekiguchishu.github.io/docs/java/java_env/ide_install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://sekiguchishu.github.io/docs/java/java_env/ide_install/</guid>
      <description>IDEのインストール ※先にJDKのインストールを終わらせてください。
IDEの選択 　IDEはIntegrated Development Environment（統合開発環境）の略で，プログラミングを支援するための便利なソフトウェアです。IDEはプログラミングをするにあたって無くてはならないものです。IDEは様々な種類のものが存在し，その選択はほとんど好みの世界です。Java言語に対応しているIDEでよく使われるものとして，
 NetBeans Eclipse IntelliJ IDEA  を挙げておきます。ここではNetBeansをインストールします。
私はIDEで最も重要なことは入力補完機能の使いやすさだと思っています。補完の良し悪しでコーディングの効率が大きく変わってきます。上に挙げた3つのIDEの中で，NetBeansの補完が一番使いやすいと，個人的には思っています。
ダウンロード 　まず「apache netbeans」で検索してみてください。執筆時点では以下のようなページがあらわれます。右上のDownloadをクリックします。  最新版の，緑色のDownloadボタンを押します（Latest LTS versionではなくLatest version）。  ここで選択肢が2つあります。インストールなし（ポータブル）で使いたい場合は「Binaries」のほうをクリックしてください。インストールしたい場合は，「Installers」のほうの，自身のOSのものをクリックしてください。  「We suggest the following mirror site for your download:」と書かれたリンクからダウンロードできます。  インストール 　「Binaries」のほうをダウンロードした場合はzipを解凍し，できたフォルダを好きな場所に置きます。
「Installers」のほうをダウンロードした場合は，インストーラを起動し，「Next」などをクリックしてインストールを完了させます。インストーラの途中の設定はデフォルトのままでよいでしょう。先にインストールしたJDKを，インストーラが認識しているかだけ確認してください。以下にWindows 10の場合に想定される表示を載せておきます。        起動 　インストールをおこなった場合は，デスクトップなり，スタートメニューなり，アプリケーションフォルダなり，ドックなりにあるNetBeansのショートカットをダブルクリックして起動します。
バイナリをダウンロードして解凍した場合は，できたフォルダの中の「bin」フォルダを開きます。
32 bit Windows(x86)の場合は「netbeans.exe」を起動します。
64 bit Windows(x64)の場合は「netbeans64.exe」を起動します。
Macの場合は拡張子なしの「netbeans」ファイルを開きます。このとき権限の問題で起動できない場合があります。その場合はMacのシステム環境設定から規制を解除できます。詳しくはMacに詳しい人に聞いてください。
起動したら，「Show On Startup」のチェックをはずしたうえで，「Start Page」を閉じます。  プロジェクトの作成 　NetBeansが扱うのは「プロジェクト」という単位です（例えばPowerPointが扱うのは.pptxという種類のファイル）。プロジェクトの実態はひとつのフォルダです。その中に，ソースコードやその他の情報が保存されています。このフォルダだけ他のPCに移動させれば，作業を再開できます。
プロジェクトを作成するには，左上のオレンジ色の「New Project」というボタンを押します。  「Categories」から「Java with Ant」を選び，右の「Projects」から「Java Application」を選び，「Next」を押します。  このとき，最初だけ，「Download and Activate」というボタンが表示される場合があります。その場合はそれを押してアクティベートします。  そのとき，アクティベートが正常に終わらずエラーが出る場合があります。その場合は，「設定画面」（後述）の「General」の「Proxy Settings」を「No Proxy」にすることを試してください。</description>
    </item>
    
  </channel>
</rss>